{"version":3,"sources":["components/Card.js","components/List.js","components/Info.js","components/Form.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Card","img","className","src","alt","List","items","titleImg","SamplePrevArrow","props","style","onClick","display","borderRadius","backgroundColor","marginTop","marginLeft","SampleNextArrow","marginRight","arrows","speed","autoplay","autoplaySpeed","slidesToShow","slidesToScroll","dots","swipeToSlide","nextArrow","prevArrow","map","item","index","key","Info","info","Row","i","Col","md","metadata","title","text","Forms","form","fields","button","main","filter","group","additional","Form","as","Group","xs","Label","label","Control","name","type","required","width","height","Check","id","Button","variant","Footer","background","App","state","loading","images","axios","get","respnose","data","this","setState","components","submit_button","console","log","color","Container","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.763708bb.chunk.js","sourcesContent":["import React from 'react'\nimport './Card.css'\n\nexport default function Card({img}) {\n    return (\n        <div className=\"wrap\">\n            <img  className=\"imgBlock\" src={img} alt=\"Img\"></img>\n        </div>\n    \n    )\n}\n","import React from 'react'\nimport Card from './Card'\nimport Slider from \"react-slick\"\nimport './List.css'\n\n\n\nexport default function List({ items, titleImg }) {\n  function SamplePrevArrow(props) {\n    const { className, style, onClick } = props;\n    return (\n      <div\n        className={className}\n        style={{ ...style, display: \"block\", borderRadius: \"50%\", backgroundColor: 'grey', marginTop: '140px', marginLeft: '20px' }}\n        onClick={onClick}\n      />\n    );\n  }\n  function SampleNextArrow(props) {\n    const { className, style, onClick } = props;\n    return (\n      <div\n        className={className}\n        style={{ ...style, display: \"block\", borderRadius: \"50%\", backgroundColor: 'grey', marginTop: '140px', marginRight: '40px' }}\n        onClick={onClick}\n      />\n    );\n  }\n\n\n  return (\n    <div>\n\n      <div className=\"bigSlider\">\n\n        <h3 className=\"titleImg\"> {titleImg}</h3>\n        <Slider\n          arrows={true}\n          speed={500}\n          autoplay={true}\n          autoplaySpeed={3000}\n          slidesToShow={3}\n          slidesToScroll={3}\n          dots={true}\n          swipeToSlide={true}\n          className={'slide'}\n          nextArrow={<SampleNextArrow />}\n          prevArrow={<SamplePrevArrow />}\n\n\n        >\n          {items.map((item, index) => {\n            return <Card img={item} key={index} />\n\n          })}\n        </Slider>\n\n\n      </div >\n      <div className=\"smallSlider\">\n\n        <h3> {titleImg}</h3>\n        <Slider\n          arrows={true}\n          speed={500}\n          autoplay={true}\n          autoplaySpeed={3000}\n          slidesToShow={1}\n          slidesToScroll={1}\n          dots={true}\n          swipeToSlide={true}\n          className={'slide'}\n\n        >\n          {items.map((item, index) => {\n            return <Card img={item} key={index} />\n\n          })}\n        </Slider>\n\n      </div >\n\n\n    </div >\n  )\n}\n","import React from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport './Info.css'\n\nexport default function Info({ info }) {\n\n    return (\n        <div className=\"wrapper\">\n\n            <Row>\n                {info.map((i, index) => {\n                    return <Col md={6}key={index}>\n                        <h4 key={index}>{i.metadata.title}</h4>\n                        <div key={index}>{i.metadata.text}</div>\n                    </Col>\n                }\n\n                )}\n            </Row>\n        </div>\n    )\n}\n","import React from 'react'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport './Form.css'\n\nexport default function Forms({ form, fields, button }) {\n\n    const main = fields.filter((i) => i.group === 'main')\n    const additional = fields.filter((i) => i.group === \"additional\")\n\n    return (\n        <div>\n            <h4>{form.title}</h4>\n            <Row>\n                <Form.Row as={Col} md={8}>\n\n                    {main.map((i) => <Form.Group as={Col} md={6} xs={12}>\n                        <Form.Label as={Col} md={12}>{i.label}\n                            <Form.Control name={i.name} type={i.type} group={i.group} required={i.required} />\n                        </Form.Label>\n                    </Form.Group>)}\n                </Form.Row>\n\n                <Form.Row as={Col} md={4}>\n                    {additional.map((i) => <Form.Group className=\"formComments\">\n                        <Form.Label style={{ width: '100%' }}>{i.label}\n                            <Form.Control style={{ height: '120px', width: '100%' }} as='textarea' name={i.name} type={i.type} group={i.group} required={i.required} />\n                        </Form.Label>\n                    </Form.Group>)}\n                </Form.Row>\n            </Row>\n            <Form>\n                {['checkbox'].map((type) => (\n                    <div key={`default-${type}`} className=\"mb-3\">\n                        <Form.Check\n                            type={type}\n                            id={`default-${type}`}\n                            label={`Я даю согласие на обработку персональных данных согласно политике конфиденциальности.`}\n                        />                      \n                    </div>\n                ))}\n            </Form>\n            <Button variant=\"{light}\" className=\"btn\">{button}</Button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <div style={{width: '100%',height: '200px', background: '#323232'}}>\n            \n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport './App.css'\nimport axios from 'axios'\nimport List from './components/List';\nimport Info from './components/Info';\nimport Forms from './components/Form';\nimport Footer from './components/Footer';\nimport Loader from 'react-loader-spinner'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport Container from 'react-bootstrap/Container'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\n\n\n\nclass App extends Component {\n\n  state = {\n    loading: false,\n    titleImg: '',\n    images: [],\n    info: [],\n    form: {\n      fields: [],\n      button: ''\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      const respnose = await axios.get('https://next.json-generator.com/api/json/get/4J5rAlllY')\n      const data = respnose.data\n      this.setState({\n        titleImg: data.components[0].metadata.title,\n        images: data.components[0].metadata.images,\n        info: data.components[1].metadata.components,\n        form: data.form,\n        fields: data.form.fields,\n        button: data.form.submit_button.text,\n        loading: true\n      })\n\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n\n  render() {\n    if (this.state.loading === false ) {\n      return (\n            \n        <Loader className=\"loader\"\n         type=\"Ball-Triangle\"\n         color=\" #78CEBF\"\n         height={100}\n         width={100}\n\n      />\n      )\n    }\n    return (\n      <div>\n    \n        <Container className=\"App\">\n\n          <List items={this.state.images}\n            titleImg={this.state.titleImg}>\n          </List>\n\n          <Info info={this.state.info} />\n          <Forms form={this.state.form}\n            fields={this.state.form.fields}\n            button={this.state.button} />\n        </Container>\n          <Footer></Footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}